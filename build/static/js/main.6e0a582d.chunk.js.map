{
  "version": 3,
  "sources": [
    "components/Products/ProductItem.module.css",
    "store/auth-context.js",
    "utils/constants.js",
    "reducers/cartReducer.js",
    "reducers/loadingRecuder.js",
    "reducers/productReducer.js",
    "store/store.js",
    "api/api.js",
    "actions/loadingActions.js",
    "actions/cartActions.js",
    "components/Layout/Navigation.js",
    "components/Cart/Cart.js",
    "components/Layout/Layout.js",
    "actions/productActions.js",
    "components/Auth/AuthForm.js",
    "pages/AuthPage.js",
    "components/Products/ProductItem.js",
    "components/Category/Category.js",
    "pages/CategoryPage.js",
    "components/StartingPage/StartingPageContent.js",
    "pages/HomePage.js",
    "components/Products/ProductList.js",
    "components/Products/ProductDetail.js",
    "pages/ProductPage.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "logoutTimer",
    "ADD_ITEM",
    "REMOVE_ITEM",
    "CLEAR_CART",
    "LOAD_CART",
    "IS_LOADING",
    "IS_LOADED",
    "GET_ALL_PRODUCTS",
    "GET_SIGNLE_PRODUCT",
    "initialState",
    "id",
    "items",
    "totalAmount",
    "isLoading",
    "loadedProducts",
    "loadedProduct",
    "persistConfig",
    "key",
    "storage",
    "persistedReducer",
    "persistReducer",
    "combineReducers",
    "cartReducer",
    "state",
    "action",
    "type",
    "types",
    "updatedItems",
    "updatedTotalAmount",
    "item",
    "price",
    "amount",
    "existingCartItemIndex",
    "findIndex",
    "existingCartItem",
    "updatedItem",
    "concat",
    "existingItem",
    "filter",
    "cart",
    "loadingReducer",
    "productReducer",
    "store",
    "createStore",
    "applyMiddleware",
    "thunkMiddleware",
    "persistor",
    "persistStore",
    "configureStore",
    "AuthContext",
    "React",
    "createContext",
    "loginEmail",
    "token",
    "isLoggedIn",
    "login",
    "logout",
    "calculateRemainingTime",
    "expirationTime",
    "currentTime",
    "Date",
    "getTime",
    "AuthContextProvider",
    "props",
    "initialToken",
    "initialLoginEmail",
    "tokenData",
    "storedLoginEmail",
    "localStorage",
    "getItem",
    "storedToken",
    "storedExpirationDate",
    "remainingTime",
    "removeItem",
    "duration",
    "retrieveStoredToken",
    "useState",
    "setToken",
    "setLoginEmail",
    "userIsLoggedIn",
    "logoutHandler",
    "useCallback",
    "clearTimeout",
    "useEffect",
    "setTimeout",
    "contextValue",
    "email",
    "setItem",
    "Provider",
    "value",
    "children",
    "FIREBASE_DOMAIN",
    "a",
    "axios",
    "method",
    "url",
    "data",
    "catch",
    "err",
    "console",
    "log",
    "productId",
    "cartData",
    "bodyRequest",
    "orderedItems",
    "fetch",
    "body",
    "JSON",
    "stringify",
    "deleteTempCart",
    "tempCartId",
    "delete",
    "checkout",
    "authCtx",
    "post",
    "user",
    "then",
    "res",
    "status",
    "setIsLoading",
    "setIsLoaded",
    "addItem",
    "clearCart",
    "mapDispatch",
    "connect",
    "useContext",
    "numberOfCartItems",
    "undefined",
    "reduce",
    "curNumber",
    "upsertTempCart",
    "Navbar",
    "collapseOnSelect",
    "expand",
    "bg",
    "variant",
    "Container",
    "Brand",
    "size",
    "Toggle",
    "Collapse",
    "Nav",
    "className",
    "to",
    "Link",
    "ButtonToolbar",
    "ButtonGroup",
    "Button",
    "style",
    "justifyContent",
    "onClick",
    "onShowCart",
    "Badge",
    "pill",
    "itemId",
    "didSubmit",
    "setDidSubmit",
    "amountBuyOut",
    "setAmountBuyOut",
    "isBuyNow",
    "name",
    "onClose",
    "toFixed",
    "cartItemRemoveHandler",
    "cartItemAddHandler",
    "checkoutHandler",
    "cartItems",
    "map",
    "ListGroup",
    "Item",
    "Col",
    "maxWidth",
    "bind",
    "cartModalContent",
    "Modal",
    "Body",
    "Footer",
    "disabled",
    "length",
    "alertDidSubmit",
    "show",
    "onHide",
    "backdrop",
    "keyboard",
    "Header",
    "closeButton",
    "Title",
    "cartIsShown",
    "setCartIsShown",
    "Spinner",
    "animation",
    "role",
    "actFetchSingleProduct",
    "dispatch",
    "fetchSingleProduct",
    "Object",
    "keys",
    "getSingleProduct",
    "finally",
    "actFetchTempCart",
    "fetchTempCart",
    "actFetchAllProduct",
    "fetchAllProduct",
    "push",
    "getAllProduct",
    "history",
    "useHistory",
    "emailInputRef",
    "useRef",
    "passwordInputRef",
    "isLogin",
    "setIsLogin",
    "errorMsg",
    "setErrorMsg",
    "Row",
    "Card",
    "margin",
    "as",
    "onSubmit",
    "event",
    "preventDefault",
    "enteredEmail",
    "current",
    "enteredPassword",
    "password",
    "returnSecureToken",
    "headers",
    "ok",
    "json",
    "errorMessage",
    "error",
    "message",
    "Error",
    "expiresIn",
    "idToken",
    "toISOString",
    "replace",
    "Form",
    "Group",
    "Label",
    "Control",
    "placeholder",
    "required",
    "ref",
    "Text",
    "color",
    "prevState",
    "AuthPage",
    "Img",
    "src",
    "images",
    "downloadUrl",
    "classes",
    "ListGroupItem",
    "dimensions",
    "initialRating",
    "rating",
    "stop",
    "fractions",
    "emptySymbol",
    "fullSymbol",
    "readonly",
    "productByCategory",
    "forEach",
    "product",
    "category",
    "Array",
    "categorys",
    "child",
    "index",
    "xs",
    "CategoryPage",
    "StartingPageContent",
    "title",
    "HomePage",
    "categoryFilterParam",
    "useParams",
    "currentPage",
    "setCurrentPage",
    "searchValue",
    "setSearchValue",
    "categoryFilter",
    "setCategoryFilter",
    "productsPerPage",
    "categoryList",
    "All",
    "filterProducts",
    "toLowerCase",
    "indexOf",
    "pageCount",
    "Math",
    "ceil",
    "currentProducts",
    "slice",
    "searchHandler",
    "e",
    "valueSearch",
    "target",
    "categoryFilterRender",
    "Dropdown",
    "href",
    "eventKey",
    "active",
    "productsList",
    "InputGroup",
    "DropdownButton",
    "onSelect",
    "categoryFilterHandler",
    "FormControl",
    "onKeyPress",
    "containerClassName",
    "previousLabel",
    "previousClassName",
    "previousLinkClassName",
    "breakLabel",
    "breakClassName",
    "breakLinkClassName",
    "activeClassName",
    "nextLabel",
    "nextClassName",
    "nextLinkClassName",
    "pageClassName",
    "pageLinkClassName",
    "marginPagesDisplayed",
    "onPageChange",
    "selected",
    "loadedImages",
    "Carousel",
    "maxHeight",
    "alt",
    "minHeight",
    "Subtitle",
    "description",
    "ProductPage",
    "path",
    "useRouteMatch",
    "exact",
    "App",
    "ReactDOM",
    "render",
    "document",
    "getElementById"
  ],
  "mappings": "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",
  "file": "static/js/main.6e0a582d.chunk.js",
  "sourcesContent": [
    "// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ProductItem_name__3G7pm\"};",
    "import React, { useState, useEffect, useCallback } from \"react\";\n\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  loginEmail: \"\",\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  const remainingDuration = adjExpirationTime - currentTime;\n\n  return remainingDuration;\n};\n\nconst retrieveStoredToken = () => {\n  const storedLoginEmail = localStorage.getItem(\"loginEmail\");\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n\n  if (remainingTime <= 3600) {\n    localStorage.removeItem(\"loginEmail\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n    return null;\n  }\n\n  return {\n    loginEmail: storedLoginEmail,\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\nexport const AuthContextProvider = (props) => {\n  const tokenData = retrieveStoredToken();\n\n  let initialToken;\n  let initialLoginEmail;\n\n  if (tokenData) {\n    initialToken = tokenData.token;\n    initialLoginEmail = tokenData.loginEmail;\n  }\n\n  const [token, setToken] = useState(initialToken);\n  const [loginEmail, setLoginEmail] = useState(initialLoginEmail);\n\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n    setLoginEmail(null);\n    localStorage.removeItem(\"loginEmail\");\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (email, token, expirationTime) => {\n    setToken(token);\n    setLoginEmail(email);\n    localStorage.setItem(\"loginEmail\", email);\n    localStorage.setItem(\"token\", token);\n    localStorage.setItem(\"expirationTime\", expirationTime);\n\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  useEffect(() => {\n    if (tokenData) {\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  const contextValue = {\n    loginEmail: loginEmail,\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n",
    "export const ADD_ITEM = \"ADD_ITEM\";\r\nexport const REMOVE_ITEM = \"REMOVE_ITEM\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\nexport const LOAD_CART = \"LOAD_CART\";\r\nexport const IS_LOADING = \"IS_LOADING\";\r\nexport const IS_LOADED = \"IS_LOADED\";\r\nexport const GET_ALL_PRODUCTS = \"GET_ALL_PRODUCTS\";\r\nexport const GET_SIGNLE_PRODUCT = \"GET_SIGNLE_PRODUCT\";\r\n",
    "import * as types from \"../utils/constants\";\r\n\r\nconst initialState = {\r\n  id: null,\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.ADD_ITEM: {\r\n      const updatedTotalAmount =\r\n        state.totalAmount + action.item.price * action.item.amount;\r\n\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.item.id\r\n      );\r\n      const existingCartItem = state.items[existingCartItemIndex];\r\n      let updatedItems;\r\n\r\n      if (existingCartItem) {\r\n        const updatedItem = {\r\n          ...existingCartItem,\r\n          amount: existingCartItem.amount + 1,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      } else {\r\n        updatedItems = state.items.concat(action.item);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        id: state.id,\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    }\r\n    case types.REMOVE_ITEM: {\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.id\r\n      );\r\n      const existingItem = state.items[existingCartItemIndex];\r\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n      let updatedItems;\r\n      if (existingItem.amount === 1) {\r\n        updatedItems = state.items.filter((item) => item.id !== action.id);\r\n      } else {\r\n        const updatedItem = {\r\n          ...existingItem,\r\n          amount: existingItem.amount - 1,\r\n        };\r\n        updatedItems = [...state.items];\r\n        updatedItems[existingCartItemIndex] = updatedItem;\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        id: state.id,\r\n        items: updatedItems,\r\n        totalAmount: updatedTotalAmount,\r\n      };\r\n    }\r\n    case types.CLEAR_CART:\r\n      return initialState;\r\n    case types.LOAD_CART: {\r\n      return {\r\n        ...state,\r\n        id: action.cart.id,\r\n        items: action.cart.items,\r\n        totalAmount: action.cart.totalAmount,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import * as types from \"../utils/constants\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n};\r\n\r\nexport const loadingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.IS_LOADING: {\r\n      return {\r\n        isLoading: true,\r\n      };\r\n    }\r\n    case types.IS_LOADED: {\r\n      return {\r\n        isLoading: false,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import * as types from \"../utils/constants\";\r\n\r\nconst initialState = {\r\n  loadedProducts: [],\r\n  loadedProduct: null,\r\n};\r\n\r\nexport const productReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.GET_ALL_PRODUCTS: {\r\n      return {\r\n        ...state,\r\n        loadedProducts: action.loadedProducts,\r\n      };\r\n    }\r\n    case types.GET_SIGNLE_PRODUCT: {\r\n      return {\r\n        ...state,\r\n        loadedProduct: action.loadedProduct,\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n",
    "import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\r\nimport { cartReducer } from \"../reducers/cartReducer\";\r\nimport { loadingReducer } from \"../reducers/loadingRecuder\";\r\nimport { productReducer } from \"../reducers/productReducer\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  storage,\r\n};\r\nconst persistedReducer = persistReducer(\r\n  persistConfig,\r\n  combineReducers({ cartReducer, loadingReducer, productReducer })\r\n);\r\n\r\nconst configureStore = (initialState) => {\r\n  const store = createStore(\r\n    persistedReducer,\r\n    initialState,\r\n    applyMiddleware(thunkMiddleware)\r\n  );\r\n  const persistor = persistStore(store);\r\n  return { store, persistor };\r\n};\r\n\r\nconst initialState = {};\r\n\r\nconst { store } = configureStore(initialState);\r\n\r\nexport default store;\r\n",
    "import axios from \"axios\";\n\nconst FIREBASE_DOMAIN =\n  \"https://lego-store-reactjs-default-rtdb.firebaseio.com/\";\n\nexport async function fetchAllProduct() {\n  return axios({\n    method: \"GET\",\n    url: `${FIREBASE_DOMAIN}/products.json?auth=${localStorage.getItem(\n      \"token\"\n    )}`,\n    data: null,\n  }).catch((err) => {\n    console.log(err);\n  });\n}\n\nexport async function fetchSingleProduct(productId) {\n  return axios({\n    method: \"GET\",\n    url: `${FIREBASE_DOMAIN}/products/${productId}.json?auth=${localStorage.getItem(\n      \"token\"\n    )}`,\n    data: null,\n  }).catch((err) => {\n    console.log(err);\n  });\n}\n\nexport default function fetchTempCart() {\n  const email = localStorage.getItem(\"loginEmail\");\n  return axios({\n    method: \"GET\",\n    url: `${FIREBASE_DOMAIN}/tempCarts.json?auth=${localStorage.getItem(\n      \"token\"\n    )}&orderBy=\"loginEmail\"&startAt=\"${email}\"&endAt=\"${email}\"`,\n    data: null,\n  }).catch((err) => {\n    console.log(err);\n  });\n}\n\nexport async function upsertTempCart(cartData) {\n  const loginEmail = localStorage.getItem(\"loginEmail\");\n  let method = \"POST\";\n  let url = `https://lego-store-reactjs-default-rtdb.firebaseio.com/tempCarts.json?auth=${localStorage.getItem(\n    \"token\"\n  )}`;\n  let bodyRequest = {\n    loginEmail: loginEmail,\n    orderedItems: cartData.items,\n    totalAmount: cartData.totalAmount,\n  };\n\n  if (cartData.id) {\n    method = \"PATCH\";\n    url = `https://lego-store-reactjs-default-rtdb.firebaseio.com/tempCarts/.json?auth=${localStorage.getItem(\n      \"token\"\n    )}`;\n    bodyRequest = { [cartData.id]: bodyRequest };\n  }\n  if (loginEmail && cartData.items && cartData.totalAmount > 0) {\n    await fetch(url, {\n      method: method,\n      body: JSON.stringify(bodyRequest),\n    });\n  }\n}\n\nexport async function deleteTempCart(tempCartId) {\n  axios\n    .delete(\n      `https://lego-store-reactjs-default-rtdb.firebaseio.com/tempCarts/${tempCartId}.json?auth=${localStorage.getItem(\n        \"token\"\n      )}`,\n      { data: null }\n    )\n    .catch((err) => {\n      console.log(err);\n    });\n}\n\nexport async function checkout(authCtx, cartData) {\n  axios\n    .post(\n      `https://lego-store-reactjs-default-rtdb.firebaseio.com/orders.json?auth=${localStorage.getItem(\n        \"token\"\n      )}`,\n      {\n        user: { loginEmail: authCtx.loginEmail },\n        orderedItems: cartData.items,\n        totalAmount: cartData.totalAmount,\n      }\n    )\n    .then((res) => {\n      if (res.status === 200 && cartData.id) {\n        //delete temp cart After checkout\n        deleteTempCart(cartData.id);\n      }\n    });\n}\n",
    "import * as types from \"../utils/constants\";\r\nexport const setIsLoading = () => {\r\n  return {\r\n    type: types.IS_LOADING,\r\n  };\r\n};\r\n\r\nexport const setIsLoaded = () => {\r\n  return {\r\n    type: types.IS_LOADED,\r\n  };\r\n};\r\n",
    "import * as types from \"../utils/constants\";\r\nimport fetchTempCart from \"../api/api\";\r\nimport { setIsLoading, setIsLoaded } from \"./loadingActions\";\r\n\r\nexport const addItem = (item) => {\r\n  return {\r\n    type: types.ADD_ITEM,\r\n    item: item,\r\n  };\r\n};\r\n\r\nexport const removeItem = (itemId) => {\r\n  return {\r\n    type: types.REMOVE_ITEM,\r\n    id: itemId,\r\n  };\r\n};\r\n\r\nexport const clearCart = () => {\r\n  return {\r\n    type: types.CLEAR_CART,\r\n  };\r\n};\r\n\r\nexport const loadCart = (cart) => {\r\n  return {\r\n    type: types.LOAD_CART,\r\n    cart,\r\n  };\r\n};\r\n\r\nexport const actFetchTempCart = () => {\r\n  return (dispatch) => {\r\n    dispatch(setIsLoading());\r\n    return fetchTempCart(\"GET\", null)\r\n      .then((res) => {\r\n        if (Object.keys(res.data).length > 0) {\r\n          dispatch(\r\n            loadCart({\r\n              id: Object.keys(res.data)[0],\r\n              items: res.data[Object.keys(res.data)[0]].orderedItems,\r\n              totalAmount: res.data[Object.keys(res.data)[0]].totalAmount,\r\n            })\r\n          );\r\n        }\r\n      })\r\n      .finally(() => {\r\n        dispatch(setIsLoaded());\r\n      });\r\n  };\r\n};\r\n",
    "import { useContext } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { clearCart } from \"../../actions/cartActions\";\r\n\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport { upsertTempCart } from \"../../api/api\";\r\n\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { FaShoppingCart } from \"react-icons/fa\";\r\nimport { IoLogOut, IoStorefrontOutline } from \"react-icons/io5\";\r\nimport { CgProfile } from \"react-icons/cg\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Container,\r\n  Badge,\r\n  ButtonToolbar,\r\n  ButtonGroup,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nconst Navigation = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const isLoggedIn = authCtx.isLoggedIn;\r\n  const numberOfCartItems =\r\n    props.items === undefined\r\n      ? 0\r\n      : props.items.reduce((curNumber, item) => {\r\n          return curNumber + item.amount;\r\n        }, 0);\r\n\r\n  const logoutHandler = () => {\r\n    //Save tempCart to reload next time login\r\n    upsertTempCart(props);\r\n    props.clearCart();\r\n    authCtx.logout();\r\n  };\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand>\r\n          <IoStorefrontOutline size=\"40\" />\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <LinkContainer to={isLoggedIn ? \"/category\" : \"/\"}>\r\n              <Nav.Link>Home</Nav.Link>\r\n            </LinkContainer>\r\n            {isLoggedIn && (\r\n              <LinkContainer to=\"/product\">\r\n                <Nav.Link>All Products</Nav.Link>\r\n              </LinkContainer>\r\n            )}\r\n          </Nav>\r\n\r\n          {isLoggedIn && (\r\n            <Nav>\r\n              <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                <ButtonGroup className=\"me-2\" aria-label=\"First group\">\r\n                  <Button\r\n                    variant=\"outline-light\"\r\n                    style={{ justifyContent: \"center\" }}\r\n                    onClick={() => props.onShowCart(false)}\r\n                  >\r\n                    <FaShoppingCart size=\"20\" />{\" \"}\r\n                    <Badge pill bg=\"secondary\">\r\n                      {numberOfCartItems}\r\n                    </Badge>\r\n                  </Button>\r\n                </ButtonGroup>\r\n                <ButtonGroup className=\"me-2\" aria-label=\"Second group\">\r\n                  <Button\r\n                    variant=\"outline-light\"\r\n                    style={{ justifyContent: \"center\" }}\r\n                    onClick={() => logoutHandler()}\r\n                  >\r\n                    <IoLogOut size=\"25\" />\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </ButtonToolbar>\r\n            </Nav>\r\n          )}\r\n          {!isLoggedIn && (\r\n            <Nav>\r\n              <Nav>\r\n                <LinkContainer to=\"/auth\">\r\n                  <Nav.Link variant=\"outline-light\" className=\"active\">\r\n                    <CgProfile size=\"25\" />\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              </Nav>\r\n            </Nav>\r\n          )}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    id: state.cartReducer.id,\r\n    items: state.cartReducer.items,\r\n    totalAmount: state.cartReducer.totalAmount,\r\n  };\r\n};\r\n\r\nconst mapDispatch = {\r\n  clearCart,\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(Navigation);\r\n",
    "import React, { useContext, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\nimport { addItem, removeItem, clearCart } from \"../../actions/cartActions\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport { checkout } from \"../../api/api\";\nimport { Modal, Col, ListGroup, Button } from \"react-bootstrap\";\n\nconst Cart = (props) => {\n  const [didSubmit, setDidSubmit] = useState(false);\n  const [amountBuyOut, setAmountBuyOut] = useState(1);\n  let cartData = props;\n  const authCtx = useContext(AuthContext);\n\n  if (props.isBuyNow) {\n    cartData = {\n      id: null,\n      items: [\n        {\n          id: props.loadedProduct.id,\n          name: props.loadedProduct.name,\n          amount: amountBuyOut,\n          price: props.loadedProduct.price,\n        },\n      ],\n      totalAmount: props.loadedProduct.price * amountBuyOut,\n      addItem: () => {\n        setAmountBuyOut(amountBuyOut + 1);\n      },\n      removeItem: () => {\n        if (amountBuyOut <= 1) {\n          props.onClose();\n        } else {\n          setAmountBuyOut(amountBuyOut - 1);\n        }\n      },\n    };\n  }\n\n  const totalAmount = `$${cartData.totalAmount.toFixed(2)}`;\n\n  const cartItemRemoveHandler = (id) => {\n    cartData.removeItem(id);\n  };\n\n  const cartItemAddHandler = (item) => {\n    cartData.addItem(item);\n  };\n\n  const checkoutHandler = async () => {\n    checkout(authCtx, cartData);\n    setDidSubmit(true);\n    if (!props.isBuyNow) {\n      cartData.clearCart();\n    }\n  };\n\n  const cartItems = cartData.items.map((item) => (\n    <ListGroup.Item\n      className=\"d-flex justify-content-between align-items-center\"\n      key={item.id}\n    >\n      <Col className=\"col-sm-8\">\n        <span\n          className=\"d-inline-block text-truncate align-items-center\"\n          style={{ maxWidth: \"90%\" }}\n        >\n          {item.name}\n        </span>\n      </Col>\n      <Col className=\"col-sm-2\">{`$${item.price}`}</Col>\n      <Col className=\"col-sm-1\">{`x${item.amount}`}</Col>\n      <Col className=\"col-sm-1\">\n        <Button\n          className=\"btn-sm\"\n          variant=\"outline-dark\"\n          onClick={cartItemRemoveHandler.bind(null, item.id)}\n        >\n          -\n        </Button>{\" \"}\n        <Button\n          className=\"btn-sm\"\n          variant=\"outline-dark\"\n          onClick={cartItemAddHandler.bind(null, item)}\n        >\n          +\n        </Button>\n      </Col>\n    </ListGroup.Item>\n  ));\n\n  const cartModalContent = (\n    <>\n      <Modal.Body>\n        <ListGroup>\n          {cartItems}\n          <ListGroup.Item className=\"d-flex justify-content-between align-items-center\">\n            <span className=\"fw-bold fs-4\">Total</span>\n            <span className=\"fw-bold fs-4\">{totalAmount}</span>\n          </ListGroup.Item>\n        </ListGroup>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"outline-dark\" onClick={props.onClose}>\n          Cancel\n        </Button>\n        <Button\n          variant=\"outline-dark\"\n          onClick={checkoutHandler}\n          disabled={cartItems.length === 0}\n        >\n          Checkout\n        </Button>\n      </Modal.Footer>\n    </>\n  );\n\n  const alertDidSubmit = (\n    <>\n      <Modal.Body>Checkout Success</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"success\" onClick={props.onClose}>\n          OK\n        </Button>\n      </Modal.Footer>\n    </>\n  );\n\n  return (\n    <Modal\n      size=\"lg\"\n      show={true}\n      onHide={props.onClose}\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title variant=\"success\">My Cart</Modal.Title>\n      </Modal.Header>\n      {!didSubmit && cartModalContent}\n      {didSubmit && alertDidSubmit}\n    </Modal>\n  );\n};\n\nconst mapState = (state) => {\n  return {\n    id: state.cartReducer.id,\n    items: state.cartReducer.items,\n    totalAmount: state.cartReducer.totalAmount,\n  };\n};\n\nconst mapDispatch = {\n  addItem,\n  removeItem,\n  clearCart,\n};\n\nexport default connect(mapState, mapDispatch)(Cart);\n",
    "import { Fragment, useState } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport Navigation from \"./Navigation\";\nimport Cart from \"../Cart/Cart\";\n\nimport { Spinner } from \"react-bootstrap\";\n\nconst Layout = (props) => {\n  const [cartIsShown, setCartIsShown] = useState(false);\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n\n  return (\n    <Fragment>\n      {cartIsShown && <Cart onClose={hideCartHandler} isBuyNow={false} />}\n      <Navigation onShowCart={showCartHandler} />\n      <main>\n        {props.isLoading && (\n          <div className=\"centered\">\n            <Spinner animation=\"border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading... </span>\n            </Spinner>\n          </div>\n        )}\n        {!props.isLoading && props.children}\n      </main>\n    </Fragment>\n  );\n};\nconst mapState = (state) => {\n  return { isLoading: state.loadingReducer.isLoading };\n};\n\nconst mapDispatch = {};\n\nexport default connect(mapState, mapDispatch)(Layout);\n",
    "import * as types from \"../utils/constants\";\r\nimport { fetchAllProduct, fetchSingleProduct } from \"../api/api\";\r\nimport { setIsLoading, setIsLoaded } from \"./loadingActions\";\r\n\r\nexport const getAllProduct = (loadedProducts) => {\r\n  return {\r\n    type: types.GET_ALL_PRODUCTS,\r\n    loadedProducts,\r\n  };\r\n};\r\n\r\nexport const actFetchAllProduct = () => {\r\n  return (dispatch) => {\r\n    dispatch(setIsLoading());\r\n    return fetchAllProduct()\r\n      .then((res) => {\r\n        const loadedProducts = [];\r\n\r\n        for (const key in res.data) {\r\n          loadedProducts.push({\r\n            id: key,\r\n            ...res.data[key],\r\n          });\r\n        }\r\n        if (Object.keys(res.data).length > 0) {\r\n          dispatch(getAllProduct(loadedProducts));\r\n        }\r\n      })\r\n      .finally(() => {\r\n        dispatch(setIsLoaded());\r\n      });\r\n  };\r\n};\r\n\r\nexport const getSingleProduct = (loadedProduct) => {\r\n  return {\r\n    type: types.GET_SIGNLE_PRODUCT,\r\n    loadedProduct,\r\n  };\r\n};\r\n\r\nexport const actFetchSingleProduct = (productId) => {\r\n  return (dispatch) => {\r\n    dispatch(setIsLoading());\r\n    return fetchSingleProduct(productId)\r\n      .then((res) => {\r\n        const loadedProduct = {\r\n          id: productId,\r\n          ...res.data,\r\n        };\r\n        if (Object.keys(res.data).length > 0) {\r\n          dispatch(getSingleProduct(loadedProduct));\r\n        }\r\n      })\r\n      .finally(() => {\r\n        dispatch(setIsLoaded());\r\n      });\r\n  };\r\n};\r\n",
    "import { useState, useRef, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { actFetchTempCart } from \"../../actions/cartActions\";\nimport { actFetchAllProduct } from \"../../actions/productActions\";\n\nimport AuthContext from \"../../store/auth-context\";\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\n\nconst AuthForm = (props) => {\n  const history = useHistory();\n  const emailInputRef = useRef();\n  const passwordInputRef = useRef();\n\n  const authCtx = useContext(AuthContext);\n\n  const [isLogin, setIsLogin] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const switchAuthModeHandler = () => {\n    setIsLogin((prevState) => !prevState);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const enteredEmail = emailInputRef.current.value;\n    const enteredPassword = passwordInputRef.current.value;\n\n    // optional: Add validation\n\n    setIsLoading(true);\n    let url;\n    if (isLogin) {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyA_pSHXagCQzpZ9yLPhpQ2fWWWhdmzFaTI\";\n    } else {\n      url =\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyA_pSHXagCQzpZ9yLPhpQ2fWWWhdmzFaTI\";\n    }\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: enteredEmail,\n        password: enteredPassword,\n        returnSecureToken: true,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        setIsLoading(false);\n        if (res.ok) {\n          return res.json();\n        } else {\n          return res.json().then((data) => {\n            let errorMessage = \"Authentication failed!\";\n            if (data && data.error && data.error.message) {\n              errorMessage = data.error.message;\n            }\n\n            throw new Error(errorMessage);\n          });\n        }\n      })\n      .then((data) => {\n        const expirationTime = new Date(\n          new Date().getTime() + +data.expiresIn * 1000\n        );\n        authCtx.login(data.email, data.idToken, expirationTime.toISOString());\n        props.actFetchTempCart();\n        props.actFetchAllProduct();\n        history.replace(\"/category\");\n      })\n      .catch((err) => {\n        setErrorMsg(err.message);\n      });\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col className=\"d-flex justify-content-center\">\n          <Card className=\"text-center w-50\" style={{ margin: \"2rem\" }}>\n            <Card.Header as=\"h3\">{isLogin ? \"Login\" : \"Sign Up\"}</Card.Header>\n            <Card.Body>\n              <form onSubmit={submitHandler}>\n                <Form.Group role=\"form\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    type=\"email\"\n                    placeholder=\"Enter email\"\n                    required\n                    ref={emailInputRef}\n                  />\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    ref={passwordInputRef}\n                    required\n                  />\n                  {errorMsg !== \"\" && (\n                    <Form.Text style={{ color: \"red\" }}>{errorMsg}</Form.Text>\n                  )}\n                  <br />\n                  {!isLoading && (\n                    <Button variant=\"dark\" type=\"submit\">\n                      {isLogin ? \"Login\" : \"Create Account\"}\n                    </Button>\n                  )}\n                  {isLoading && <p>Sending request...</p>}\n                </Form.Group>\n              </form>\n            </Card.Body>\n            <Card.Footer>\n              <Button variant=\"link\" onClick={switchAuthModeHandler}>\n                {isLogin ? \"Create new account\" : \"Login with existing account\"}\n              </Button>\n            </Card.Footer>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapState = (state) => {\n  return {};\n};\n\nconst mapDispatch = {\n  actFetchTempCart,\n  actFetchAllProduct,\n};\n\nexport default connect(mapState, mapDispatch)(AuthForm);\n",
    "import AuthForm from '../components/Auth/AuthForm';\n\nconst AuthPage = () => {\n  return <AuthForm />;\n};\n\nexport default AuthPage;\n",
    "import { useHistory } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../../actions/cartActions\";\nimport { actFetchSingleProduct } from \"../../actions/productActions\";\n\nimport classes from \"./ProductItem.module.css\";\nimport { Card, Col, Button, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport Rating from \"react-rating\";\nimport { BsStarFill, BsStar } from \"react-icons/bs\";\n\nconst ProductItem = (props) => {\n  const history = useHistory();\n\n  const addToCartHandler = () => {\n    props.addItem({\n      id: props.id,\n      name: props.name,\n      amount: 1,\n      price: props.price,\n    });\n  };\n  const loadDetail = () => {\n    props.actFetchSingleProduct(props.id);\n    history.replace(`/product/detail/${props.id}`);\n  };\n  return (\n    <Col className=\"mb-3\" key={props.id}>\n      <Card>\n        <Card.Img\n          variant=\"top\"\n          src={props.images[Object.keys(props.images)[0]].downloadUrl}\n        />\n        <Card.Body>\n          <Card.Text>\n            <span className={classes.name}>{props.name}</span>\n          </Card.Text>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroupItem>\n            <cite>{props.dimensions}</cite>\n          </ListGroupItem>\n          <ListGroupItem className=\"d-flex justify-content-between\">\n            <Card.Title as=\"h5\" className=\"md-3\" style={{ color: \"#ad3502\" }}>\n              ${props.price}\n            </Card.Title>\n            <Rating\n              style={{ color: \"#f7dd7c\" }}\n              initialRating={props.rating}\n              stop={5}\n              fractions={2}\n              emptySymbol={[<BsStar />]}\n              fullSymbol={[<BsStarFill />]}\n              readonly\n            />\n          </ListGroupItem>\n        </ListGroup>\n\n        <Card.Footer className=\"d-flex justify-content-between\">\n          <Button variant=\"outline-dark\" size=\"sm\" onClick={loadDetail}>\n            View detail\n          </Button>\n          <Button variant=\"outline-dark\" size=\"sm\" onClick={addToCartHandler}>\n            Add to cart\n          </Button>\n        </Card.Footer>\n      </Card>\n    </Col>\n  );\n};\n\nconst mapState = (state) => {\n  return {};\n};\n\nconst mapDispatch = {\n  addItem,\n  actFetchSingleProduct,\n};\n\nexport default connect(mapState, mapDispatch)(ProductItem);\n",
    "import { connect } from \"react-redux\";\r\n\r\nimport ProductItem from \"../Products/ProductItem\";\r\nimport { Container, Row, Nav, Card } from \"react-bootstrap\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n\r\nconst Category = (props) => {\r\n  let productByCategory = {};\r\n  props.loadedProducts.forEach((product) => {\r\n    if (productByCategory[product.category] === undefined) {\r\n      productByCategory[product.category] = new Array(product);\r\n    } else {\r\n      productByCategory[product.category].push(product);\r\n    }\r\n  });\r\n\r\n  const categorys = [];\r\n\r\n  for (let key in productByCategory) {\r\n    const child = productByCategory[key].map(\r\n      (product, index) =>\r\n        index < 5 && (\r\n          <ProductItem\r\n            key={product.id}\r\n            id={product.id}\r\n            name={product.name}\r\n            dimensions={product.dimensions}\r\n            price={product.price}\r\n            images={product.images}\r\n            rating={product.rating}\r\n          />\r\n        )\r\n    );\r\n    const item = (\r\n      <Card style={{ margin: \"2rem\" }} key={key}>\r\n        <Card.Header as=\"h5\">\r\n          <Nav>\r\n            <Nav.Item>\r\n              <LinkContainer to={`/product/${key}`}>\r\n                <Nav.Link className=\"link-dark\">\r\n                  {key + \" (\" + productByCategory[key].length + \")\"}\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav.Item>\r\n          </Nav>\r\n        </Card.Header>\r\n        <Card.Body>\r\n          <Container>\r\n            <Row xs={5}>{child}</Row>\r\n          </Container>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n    categorys.push(item);\r\n  }\r\n\r\n  return <>{categorys}</>;\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return {\r\n    loadedProducts: state.productReducer.loadedProducts,\r\n  };\r\n};\r\n\r\nconst mapDispatch = {};\r\n\r\nexport default connect(mapState, mapDispatch)(Category);\r\n",
    "import Category from \"../components/Category/Category\";\n\nconst CategoryPage = () => {\n  return <Category />;\n};\n\nexport default CategoryPage;\n",
    "import { Card } from \"react-bootstrap\";\n\nconst StartingPageContent = () => {\n  return (\n    <Card className=\"text-center\" style={{ margin: \"2rem\" }}>\n      <Card.Header>Welcome</Card.Header>\n      <Card.Body>\n        <blockquote className=\"blockquote mb-0\">\n          <p> E-commerce MOCK project </p>\n          <footer className=\"blockquote-footer\">\n            Coding by <cite title=\"Source Title\">TuPA2</cite>\n          </footer>\n        </blockquote>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default StartingPageContent;\n",
    "import StartingPageContent from '../components/StartingPage/StartingPageContent';\n\nconst HomePage = () => {\n  return <StartingPageContent />;\n};\n\nexport default HomePage;\n",
    "import { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { connect } from \"react-redux\";\n\nimport ProductItem from \"./ProductItem\";\nimport ReactPaginate from \"react-paginate\";\nimport {\n  Card,\n  Container,\n  Row,\n  Col,\n  Form,\n  FormControl,\n  InputGroup,\n  Button,\n  DropdownButton,\n  Dropdown,\n} from \"react-bootstrap\";\nimport { BsSearch } from \"react-icons/bs\";\n\nconst ProductList = (props) => {\n  const { categoryFilterParam } = useParams();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchValue, setSearchValue] = useState(\"\");\n  const [categoryFilter, setCategoryFilter] = useState(\n    categoryFilterParam ? categoryFilterParam : \"All\"\n  );\n  const [productsPerPage] = useState(10);\n\n  if (!props.loadedProducts || props.loadedProducts.length === 0) {\n    return <p className=\"centered\">No products found!</p>;\n  }\n\n  //get All Category before slice\n  let categoryList = { All: \"All\" };\n  props.loadedProducts.forEach((product) => {\n    if (categoryList[product.category] === undefined) {\n      categoryList[product.category] = product.category;\n    }\n  });\n\n  // Filter products\n  const filterProducts =\n    categoryFilter === \"All\"\n      ? props.loadedProducts.filter(\n          (product) => product.name.toLowerCase().indexOf(searchValue) > -1\n        )\n      : props.loadedProducts.filter(\n          (product) =>\n            product.name.toLowerCase().indexOf(searchValue) > -1 &&\n            product.category === categoryFilter\n        );\n  const pageCount = Math.ceil(filterProducts.length / productsPerPage);\n  //slice data when paginate\n  const currentProducts = filterProducts.slice(\n    (currentPage - 1) * productsPerPage,\n    currentPage * productsPerPage\n  );\n\n  // Pagination\n  const reactPaginateHandler = (data) => setCurrentPage(data.selected + 1);\n  // Search by name\n  const searchHandler = (e) => {\n    e.preventDefault();\n    const valueSearch =\n      e.target[0] !== undefined ? e.target[0].value : e.target.value;\n    setSearchValue(valueSearch);\n    setCurrentPage(1);\n  };\n  // Filter by Catergory\n  const categoryFilterHandler = (eventKey, e) => {\n    setCategoryFilter(eventKey);\n    setCurrentPage(1);\n  };\n\n  let categoryFilterRender = [];\n  for (let key in categoryList) {\n    categoryFilterRender.push(\n      <Dropdown.Item\n        href=\"#\"\n        eventKey={key}\n        key={key}\n        active={key === categoryFilter}\n      >\n        {key}\n      </Dropdown.Item>\n    );\n  }\n\n  const productsList = currentProducts.map((product, index) => (\n    <ProductItem\n      key={product.id}\n      id={product.id}\n      name={product.name}\n      dimensions={product.dimensions}\n      price={product.price}\n      images={product.images}\n      rating={product.rating}\n    />\n  ));\n\n  return (\n    <Card style={{ margin: \"2rem\" }}>\n      <Card.Header>\n        <Col className=\"col-md-6 offset-md-3\">\n          <Form onSubmit={(e) => searchHandler(e)}>\n            <InputGroup className=\"mb-6\">\n              <DropdownButton\n                variant=\"outline-secondary\"\n                title={categoryFilter}\n                id=\"input-group-dropdown-1\"\n                onSelect={(eventKey, e) => categoryFilterHandler(eventKey, e)}\n              >\n                {categoryFilterRender}\n              </DropdownButton>\n              <FormControl\n                className=\"col-xs-4\"\n                variant=\"outline-secondary\"\n                placeholder=\"Search...\"\n                aria-label=\"Search...\"\n                aria-describedby=\"basic-addon2\"\n                onKeyPress={(e) => {\n                  e.key === \"Enter\" && searchHandler(e);\n                }}\n              />\n              <Button\n                id=\"button-addon2\"\n                type=\"submit\"\n                variant=\"outline-secondary\"\n                style={{ justifyContent: \"center\" }}\n              >\n                <BsSearch size=\"25\" />\n              </Button>\n            </InputGroup>\n          </Form>\n        </Col>\n      </Card.Header>\n      <Card.Body>\n        <Container>\n          <Row xs={5}>{productsList}</Row>\n        </Container>\n      </Card.Body>\n      <Card.Footer className=\"d-flex justify-content-center\">\n        <ReactPaginate\n          containerClassName={\"pagination mb-6\"}\n          previousLabel={\"Previous\"}\n          previousClassName={\"page-item\"}\n          previousLinkClassName={\"page-link\"}\n          breakLabel={\"...\"}\n          breakClassName={\"page-item\"}\n          breakLinkClassName={\"page-link\"}\n          activeClassName={\"active\"}\n          nextLabel={\"Next\"}\n          nextClassName={\"page-item\"}\n          nextLinkClassName={\"page-link\"}\n          pageClassName={\"page-item\"}\n          pageLinkClassName={\"page-link\"}\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          onPageChange={reactPaginateHandler}\n        />\n      </Card.Footer>\n    </Card>\n  );\n};\n\nconst mapState = (state) => {\n  return {\n    loadedProducts: state.productReducer.loadedProducts,\n  };\n};\n\nconst mapDispatch = {};\n\nexport default connect(mapState, mapDispatch)(ProductList);\n",
    "import { Fragment, useState } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { addItem } from \"../../actions/cartActions\";\r\nimport { actFetchSingleProduct } from \"../../actions/productActions\";\r\n\r\nimport Cart from \"../Cart/Cart\";\r\nimport Rating from \"react-rating\";\r\nimport { BsStarFill, BsStar } from \"react-icons/bs\";\r\nimport {\r\n  Carousel,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Badge,\r\n  ButtonToolbar,\r\n  ButtonGroup,\r\n  Button,\r\n} from \"react-bootstrap\";\r\n\r\nconst ProductDetail = (props) => {\r\n  const [cartIsShown, setCartIsShown] = useState(false);\r\n  const showCartHandler = () => {\r\n    setCartIsShown(true);\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    setCartIsShown(false);\r\n  };\r\n\r\n  if (!props.loadedProduct) {\r\n    return <p className=\"centered\">No products found!</p>;\r\n  }\r\n\r\n  const addToCartHandler = () => {\r\n    props.addItem({\r\n      id: props.loadedProduct.id,\r\n      name: props.loadedProduct.name,\r\n      amount: 1,\r\n      price: props.loadedProduct.price,\r\n    });\r\n  };\r\n\r\n  const loadedImages = [];\r\n  for (let key in props.loadedProduct.images) {\r\n    loadedImages.push(\r\n      <Carousel.Item key={key}>\r\n        <img\r\n          style={{ maxHeight: \"60vh\" }}\r\n          className=\"d-block w-100\"\r\n          src={props.loadedProduct.images[key].downloadUrl}\r\n          alt=\"\"\r\n        />\r\n      </Carousel.Item>\r\n    );\r\n  }\r\n  return (\r\n    <Fragment>\r\n      {cartIsShown && (\r\n        <Cart\r\n          onClose={hideCartHandler}\r\n          isBuyNow={true}\r\n          loadedProduct={props.loadedProduct}\r\n        />\r\n      )}\r\n      <Card style={{ margin: \"2rem 15rem\" }}>\r\n        <Card.Header>Detail product</Card.Header>\r\n        <Card.Body className=\"d-flex justify-content-between\">\r\n          <Col>\r\n            <Carousel variant=\"dark\">{loadedImages}</Carousel>\r\n          </Col>\r\n          <Col>\r\n            <Card\r\n              className=\"border-0\"\r\n              style={{ maxHeight: \"60vh\", minHeight: \"60vh\" }}\r\n            >\r\n              <Card.Body>\r\n                <Badge bg=\"dark\">{props.loadedProduct.category}</Badge>\r\n                <Card.Title>{props.loadedProduct.name}</Card.Title>\r\n                <Card.Subtitle className=\"mb-3 text-muted\">\r\n                  {props.loadedProduct.dimensions}\r\n                </Card.Subtitle>\r\n                <Container>\r\n                  <Row>\r\n                    <Col className=\"col-sm-3 \">\r\n                      <Card.Title\r\n                        as=\"h4\"\r\n                        className=\"md-3\"\r\n                        style={{ color: \"#ad3502\" }}\r\n                      >\r\n                        ${props.loadedProduct.price}\r\n                      </Card.Title>\r\n                    </Col>\r\n                    <Col className=\"col-sm-9 \">\r\n                      <Rating\r\n                        style={{ color: \"#f7dd7c\" }}\r\n                        initialRating={props.loadedProduct.rating}\r\n                        stop={5}\r\n                        fractions={2}\r\n                        emptySymbol={[<BsStar />]}\r\n                        fullSymbol={[<BsStarFill />]}\r\n                        readonly\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Container>\r\n                <Card.Text>{props.loadedProduct.description}</Card.Text>\r\n\r\n                <ButtonToolbar aria-label=\"Toolbar with button groups\">\r\n                  <ButtonGroup className=\"me-2\" aria-label=\"First group\">\r\n                    <Button variant=\"outline-dark\" onClick={addToCartHandler}>\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                  <ButtonGroup className=\"me-2\" aria-label=\"Second group\">\r\n                    <Button variant=\"outline-dark\" onClick={showCartHandler}>\r\n                      Buy Now\r\n                    </Button>\r\n                  </ButtonGroup>\r\n                </ButtonToolbar>\r\n              </Card.Body>\r\n            </Card>\r\n          </Col>\r\n        </Card.Body>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapState = (state) => {\r\n  return { loadedProduct: state.productReducer.loadedProduct };\r\n};\r\n\r\nconst mapDispatch = {\r\n  addItem,\r\n  actFetchSingleProduct,\r\n};\r\n\r\nexport default connect(mapState, mapDispatch)(ProductDetail);\r\n",
    "import { Fragment } from \"react\";\nimport { Switch, Route, Redirect, useRouteMatch } from \"react-router-dom\";\n\nimport ProductList from \"../components/Products/ProductList\";\nimport ProductDetail from \"../components/Products/ProductDetail\";\nconst ProductPage = () => {\n  let { path } = useRouteMatch();\n\n  return (\n    <Fragment>\n      <Switch>\n        <Route path={path} exact>\n          <ProductList />\n        </Route>\n        <Route path={`${path}/detail/:productId`}>\n          <ProductDetail />\n        </Route>\n        <Route path={`${path}/:categoryFilterParam`}>\n          <ProductList />\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Fragment>\n  );\n};\n\nexport default ProductPage;\n",
    "import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport AuthPage from \"./pages/AuthPage\";\nimport CategoryPage from \"./pages/CategoryPage\";\nimport HomePage from \"./pages/HomePage\";\nimport ProductPage from \"./pages/ProductPage\";\nimport AuthContext from \"./store/auth-context\";\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          {!authCtx.isLoggedIn && <HomePage />}\n        </Route>\n        {!authCtx.isLoggedIn && (\n          <Route path=\"/auth\">\n            <AuthPage />\n          </Route>\n        )}\n        <Route path=\"/category\">\n          {authCtx.isLoggedIn && <CategoryPage />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        <Route path=\"/product\">\n          {authCtx.isLoggedIn && <ProductPage />}\n          {!authCtx.isLoggedIn && <Redirect to=\"/auth\" />}\n        </Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n",
    "import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { AuthContextProvider } from \"./store/auth-context\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <AuthContextProvider>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n"
  ],
  "sourceRoot": ""
}
